MPICC=mpicc
CC=gcc
CPP=c++

CFLAGS = -O2 -march=haswell -std=gnu11 -D_GNU_SOURCE -Wall -fopenmp

LDFLAGS_MKL=-L/pdc/vol/i-compilers/17.0.1/mkl/lib/intel64 -lmkl_intel_lp64 \
	 		 -lmkl_sequential -lmkl_core -lpthread \
	 		 -Wl,--rpath,/pdc/vol/i-compilers/17.0.1/mkl/lib/intel64
CFLAGS_MKL=-I/pdc/vol/i-compilers/17.0.1/mkl/include


FLAGS = `pkg-config --libs --cflags gsl glib-2.0 cvodes` $(CFLAGS_MKL) $(LDFLAGS_MKL)  -lhdf5 -lhdf5_hl

MALA_SRC=./src/mcmc/smmala.c ./src/mcmc/mcmc_kernel.c			\
./src/ode/ode_model.c ./src/app/read_data_hdf5.c ./src/mcmc/mv_norm.c	\
./src/mcmc/model_parameters_smmala.c ./src/app/normalisation_sd.c	\
./src/app/dynamic_array.c ./src/mcmc/smmala_posterior.c \
./src/app/diagnosis_output.c ./src/app/flatten.c

BIN=./bin

.PHONY: all clean

all: bin/ode_smmala


$(BIN)/ode_smmala: ./src/app/ode_smmala.c $(MALA_SRC)
	$(MPICC) $(MALA_SRC) -o $(BIN)/ode_smmala -ldl $(CFLAGS) src/app/ode_smmala.c $(FLAGS)

clean:
	rm $(BIN)/ode_smmala
