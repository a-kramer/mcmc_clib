%
% ODEmodel11S26P4U_jac.m
%
% This MATLAB function computes the Jacobian of the vector field
% defined in ODEmodel11S26P4U_vf.m.
%
% This file was generated by the program VFGEN (Version:2.4.1)
% Generated on 16-Dec-2013 at 17:39
%
%
function jac_ = ODEmodel11S26P4U_jac(t,x_,p_)
    X1         = x_(1);
    X2         = x_(2);
    X3         = x_(3);
    X4         = x_(4);
    X5         = x_(5);
    X6         = x_(6);
    X7         = x_(7);
    X8         = x_(8);
    X9         = x_(9);
    X10        = x_(10);
    X11        = x_(11);
    theta_1    = p_(1);
    theta_2    = p_(2);
    theta_3    = p_(3);
    theta_4    = p_(4);
    theta_5    = p_(5);
    theta_6    = p_(6);
    theta_7    = p_(7);
    theta_8    = p_(8);
    theta_9    = p_(9);
    theta_10   = p_(10);
    theta_11   = p_(11);
    theta_12   = p_(12);
    theta_13   = p_(13);
    theta_14   = p_(14);
    theta_15   = p_(15);
    theta_16   = p_(16);
    theta_17   = p_(17);
    theta_18   = p_(18);
    theta_19   = p_(19);
    theta_20   = p_(20);
    theta_21   = p_(21);
    theta_22   = p_(22);
    theta_23   = p_(23);
    theta_24   = p_(24);
    theta_25   = p_(25);
    theta_26   = p_(26);
    u1         = p_(27);
    u2         = p_(28);
    u3         = p_(29);
    u4         = p_(30);
    jac_ = zeros(11,11);
    jac_(1,1) = -theta_7-theta_2;
    jac_(1,2) = theta_1;
    jac_(1,7) = theta_22*X9*theta_5;
    jac_(1,9) = X7*theta_22*theta_5;
    jac_(2,1) = theta_2;
    jac_(2,2) = -theta_1-theta_8;
    jac_(3,2) = -theta_3*X3;
    jac_(3,3) = -theta_9-theta_3*X2;
    jac_(3,4) = theta_4;
    jac_(4,2) = theta_3*X3;
    jac_(4,3) = theta_3*X2;
    jac_(4,4) = -theta_10-theta_4;
    jac_(5,5) = -theta_10;
    jac_(6,4) = -theta_14*X6;
    jac_(6,5) = -theta_14*X6;
    jac_(6,6) = -(X4+X5)*theta_14-theta_16;
    jac_(6,7) = theta_13;
    jac_(7,4) = theta_14*X6;
    jac_(7,5) = theta_14*X6;
    jac_(7,6) = (X4+X5)*theta_14;
    jac_(7,7) = -theta_13-theta_17;
    jac_(8,4) = X10*theta_19;
    jac_(8,5) = X10*theta_19;
    jac_(8,8) = -theta_20-theta_24;
    jac_(8,10) = theta_19*(X4+X5);
    jac_(9,8) = theta_20;
    jac_(9,9) = -theta_21;
    jac_(10,4) = -X10*theta_19;
    jac_(10,5) = -X10*theta_19;
    jac_(10,7) = theta_22*X11;
    jac_(10,10) = -theta_19*(X4+X5);
    jac_(10,11) = X7*theta_22;
    jac_(11,7) = -theta_22*X11;
    jac_(11,9) = theta_21;
    jac_(11,11) = -theta_25-X7*theta_22;

